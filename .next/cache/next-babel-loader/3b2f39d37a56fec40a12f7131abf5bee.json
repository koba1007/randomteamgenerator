{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { UPDATE_NUMBER_OF_TEAMS, SET_SELECTED_TEAMS } from '../actions/teamsActions';\n\nconst teamsReducer = (state = {\n  numberOfTeams: 0,\n  selectedTeams: []\n}, action) => {\n  switch (action.type) {\n    case UPDATE_NUMBER_OF_TEAMS:\n      return _objectSpread({}, state, {\n        numberOfTeams: parseInt(action.payload)\n      });\n\n    case SET_SELECTED_TEAMS:\n      return _objectSpread({}, state, {\n        selectedTeams: action.payload\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default teamsReducer;","map":{"version":3,"sources":["/home/tarkett/miljandev/soccer-app/redux/reducers/teamsReducer.js"],"names":["UPDATE_NUMBER_OF_TEAMS","SET_SELECTED_TEAMS","teamsReducer","state","numberOfTeams","selectedTeams","action","type","parseInt","payload"],"mappings":";;;;;;AAAA,SAASA,sBAAT,EAAiCC,kBAAjC,QAA2D,yBAA3D;;AAEA,MAAMC,YAAY,GACd,CAACC,KAAK,GAAG;AAAEC,EAAAA,aAAa,EAAE,CAAjB;AAAoBC,EAAAA,aAAa,EAAE;AAAnC,CAAT,EAAkDC,MAAlD,KAA6D;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,sBAAL;AACI,+BAAWG,KAAX;AAAkBC,QAAAA,aAAa,EAAEI,QAAQ,CAACF,MAAM,CAACG,OAAR;AAAzC;;AACJ,SAAKR,kBAAL;AACI,+BAAWE,KAAX;AAAkBE,QAAAA,aAAa,EAAEC,MAAM,CAACG;AAAxC;;AACJ;AACI,+BAAWN,KAAX;AANR;AAQH,CAVD;;AAWA,eAAeD,YAAf","sourcesContent":["import { UPDATE_NUMBER_OF_TEAMS, SET_SELECTED_TEAMS } from '../actions/teamsActions';\n\nconst teamsReducer =\n    (state = { numberOfTeams: 0, selectedTeams: [] }, action) => {\n    switch (action.type) {\n        case UPDATE_NUMBER_OF_TEAMS:\n            return {...state, numberOfTeams: parseInt(action.payload)};\n        case SET_SELECTED_TEAMS:\n            return {...state, selectedTeams: action.payload}\n        default:\n            return {...state};\n    }\n};\nexport default teamsReducer;\n"]},"metadata":{},"sourceType":"module"}