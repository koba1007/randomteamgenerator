{"ast":null,"code":"var _jsxFileName = \"/home/tarkett/miljandev/soccer-app/components/TeamListModal.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Modal from 'react-modal';\nimport TeamChooser from \"./TeamChooser\";\nimport { connect } from 'react-redux';\nimport { updateNumberOfTeams } from \"../redux/actions/teamsActions\";\nconst customStyles = {\n  content: {\n    top: '40%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '100%',\n    zIndex: '2'\n  }\n};\nModal.setAppElement(\"#team-list-modal\");\n\nclass TeamListModal extends React.Component {\n  static getInitialProps({\n    store\n  }) {}\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"openModal\", () => {\n      this.setContentErrors();\n      this.setState({\n        isModalOpen: true\n      });\n    });\n\n    _defineProperty(this, \"closeModal\", () => {\n      this.setState({\n        isModalOpen: false\n      });\n    });\n\n    this.state = {\n      isModalOpen: false,\n      contentErrors: []\n    };\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  setContentErrors() {\n    const contentErrors = [];\n\n    if (this.props.players.length <= 1) {\n      contentErrors.push(\"You didn't add enough players.\");\n    }\n\n    if (this.props.players.length < this.props.numberOfTeams) {\n      contentErrors.push(\"Number of players must be greater then number of teams.\");\n    }\n\n    console.log(this.props.numberOfTeams);\n\n    if (this.props.numberOfTeams < 2) {\n      contentErrors.push(\"Number of teams can not be less then 2.\");\n    }\n\n    this.setState({\n      contentErrors\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success align-input-left ml-3\",\n      onClick: this.openModal,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, \"Get your teams\"), __jsx(\"div\", {\n      id: \"team-list-modal\",\n      className: \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, __jsx(Modal, {\n      isOpen: this.state.isModalOpen,\n      onRequestClose: this.closeModal,\n      style: customStyles,\n      contentLabel: \"Get your teams\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"modal-dialog modal-fullscreen\",\n      role: \"document\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"modal-content d-flex justify-content-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"modal-header\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, __jsx(\"h5\", {\n      className: \"modal-title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, \" \", this.state.contentErrors.length === 0 ? 'Your teams have been selected' : 'There are validation errors'), __jsx(\"button\", {\n      type: \"button\",\n      onClick: this.closeModal,\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"\\xD7\"))), __jsx(\"div\", {\n      className: \"modal-body alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.contentErrors.length === 0 ? __jsx(TeamChooser, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }) : __jsx(\"div\", {\n      className: \"alert alert-dismissible alert-warning\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: \"mb-0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, this.state.contentErrors.map(error => __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    }, \" \", error), \" \", __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100\n      },\n      __self: this\n    })))))), __jsx(\"div\", {\n      className: \"modal-footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      onClick: this.closeModal,\n      \"data-dismiss\": \"modal\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, \"Close\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  numberOfTeams: state.teams.numberOfTeams,\n  selectedTeams: state.teams.selectedTeams,\n  players: state.player.players\n});\n\nconst mapDispatchToProps = {\n  updateNumberOfTeams: updateNumberOfTeams\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamListModal);","map":{"version":3,"sources":["/home/tarkett/miljandev/soccer-app/components/TeamListModal.js"],"names":["React","Modal","TeamChooser","connect","updateNumberOfTeams","customStyles","content","top","left","right","bottom","marginRight","transform","width","zIndex","setAppElement","TeamListModal","Component","getInitialProps","store","constructor","props","setContentErrors","setState","isModalOpen","state","contentErrors","afterOpenModal","subtitle","style","color","players","length","push","numberOfTeams","console","log","render","openModal","closeModal","map","error","mapStateToProps","teams","selectedTeams","player","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\nimport Modal from 'react-modal';\nimport TeamChooser from \"./TeamChooser\";\n\nimport { connect } from 'react-redux';\nimport { updateNumberOfTeams } from \"../redux/actions/teamsActions\";\n\nconst customStyles = {\n    content : {\n        top                   : '40%',\n        left                  : '50%',\n        right                 : 'auto',\n        bottom                : 'auto',\n        marginRight           : '-50%',\n        transform             : 'translate(-50%, -50%)',\n        width                 : '100%',\n        zIndex                :  '2'\n    }\n};\nModal.setAppElement(\"#team-list-modal\");\n\nclass TeamListModal extends React.Component {\n    static getInitialProps({store}) {}\n    constructor(props) {\n        super(props);\n        this.state = {\n            isModalOpen: false,\n            contentErrors: [],\n        }\n    }\n\n    openModal = () =>  {\n        this.setContentErrors()\n        this.setState({ isModalOpen: true});\n    }\n\n     afterOpenModal() {\n        // references are now sync'd and can be accessed.\n        subtitle.style.color = '#f00';\n    }\n\n    closeModal = () => {\n        this.setState({ isModalOpen: false});\n    }\n\n    setContentErrors() {\n        const contentErrors = [];\n        if (this.props.players.length <= 1) {\n            contentErrors.push(\"You didn't add enough players.\")\n        }\n        if (this.props.players.length < this.props.numberOfTeams) {\n            contentErrors.push(\"Number of players must be greater then number of teams.\")\n        }\n        console.log(this.props.numberOfTeams)\n        if (this.props.numberOfTeams < 2) {\n            contentErrors.push(\"Number of teams can not be less then 2.\")\n        }\n        this.setState({ contentErrors})\n    }\n\n    render() {\n        return (\n            <div>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-success align-input-left ml-3\"\n                    onClick={this.openModal}\n                >\n                    Get your teams\n                </button>\n                <div id=\"team-list-modal\" className=\"modal\">\n                    <Modal\n                        isOpen={this.state.isModalOpen}\n                        onRequestClose={this.closeModal}\n                        style={customStyles}\n                        contentLabel=\"Get your teams\"\n                    >\n                    <div className=\"modal-dialog modal-fullscreen\" role=\"document\">\n                        <div className=\"modal-content d-flex justify-content-center\">\n                            <div className=\"modal-header\">\n                                <h5 className=\"modal-title\"> {\n                                    this.state.contentErrors.length === 0\n                                    ? 'Your teams have been selected'\n                                    : 'There are validation errors'\n                                }\n                                </h5>\n                                <button type=\"button\" onClick={this.closeModal} className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                                    <span aria-hidden=\"true\">&times;</span>\n                                </button>\n                            </div>\n                            <div className=\"modal-body alert-warning\">\n                                {\n                                    this.state.contentErrors.length === 0 ?\n                                        <TeamChooser/> :\n                                        <div className=\"alert alert-dismissible alert-warning\">\n                                            <p className=\"mb-0\">\n                                                {\n                                                    this.state.contentErrors.map((error) =>\n                                                        <span>\n                                                            <span> {error}</span> <br/>\n                                                        </span>\n                                                    )\n                                                }\n                                            </p>\n                                        </div>\n                                }\n                            </div>\n                            <div className=\"modal-footer\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-secondary\"\n                                    onClick={this.closeModal}\n                                    data-dismiss=\"modal\">Close\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                    </Modal>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    numberOfTeams: state.teams.numberOfTeams,\n    selectedTeams: state.teams.selectedTeams,\n    players: state.player.players\n\n});\nconst mapDispatchToProps = {\n    updateNumberOfTeams: updateNumberOfTeams,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamListModal);"]},"metadata":{},"sourceType":"module"}