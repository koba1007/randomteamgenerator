{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tarkett/miljandev/soccer-app/components/TeamChooser.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\n\nvar TeamChooser = /*#__PURE__*/function (_React$Component) {\n  _inherits(TeamChooser, _React$Component);\n\n  function TeamChooser(props) {\n    var _this;\n\n    _classCallCheck(this, TeamChooser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TeamChooser).call(this, props));\n    _this.state = {\n      players: []\n    };\n    return _this;\n  }\n\n  _createClass(TeamChooser, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getTeams();\n    }\n  }, {\n    key: \"getShuffledPlayers\",\n    value: function getShuffledPlayers() {\n      var shuffledPlayers = this.props.players;\n\n      for (var i = shuffledPlayers.length - 1; i > 0; i--) {\n        var rand = Math.floor(Math.random() * (i + 1));\n        var _ref = [shuffledPlayers[rand], shuffledPlayers[i]];\n        shuffledPlayers[i] = _ref[0];\n        shuffledPlayers[rand] = _ref[1];\n      }\n\n      return shuffledPlayers;\n    }\n  }, {\n    key: \"getTeams\",\n    value: function getTeams() {\n      var _this2 = this;\n\n      var selectedTeams = [];\n      var teamNumber = 1;\n      this.getShuffledPlayers().forEach(function (player, index) {\n        selectedTeams[teamNumber] = _Array$isArray(selectedTeams[teamNumber]) ? selectedTeams[teamNumber] : [];\n        selectedTeams[teamNumber].push(index);\n        console.log(selectedTeams[teamNumber]);\n\n        if (teamNumber === _this2.props.numberOfTeams) {\n          teamNumber = 1;\n          return;\n        }\n\n        teamNumber++;\n      });\n      return selectedTeams;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      console.l;\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, this.getTeams().map(function (team, teamIndex) {\n        return __jsx(\"div\", {\n          key: teamIndex,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43\n          },\n          __self: this\n        }, __jsx(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, \"Team \", teamIndex, \" \"), __jsx(\"table\", {\n          className: \"table table-hover\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, __jsx(\"thead\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, __jsx(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 47\n          },\n          __self: this\n        }, __jsx(\"th\", {\n          scope: \"col\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, \" Player Name:\"))), __jsx(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, team.map(function (playersIndex) {\n          return __jsx(\"tr\", {\n            className: \"table-active\",\n            key: playersIndex,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 53\n            },\n            __self: this\n          }, __jsx(\"td\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 54\n            },\n            __self: this\n          }, _this3.props.players[playersIndex]));\n        }))));\n      }));\n    }\n  }]);\n\n  return TeamChooser;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    numberOfTeams: state.teams.numberOfTeams,\n    players: state.player.players\n  };\n};\n\nexport default connect(mapStateToProps)(TeamChooser);","map":{"version":3,"sources":["/home/tarkett/miljandev/soccer-app/components/TeamChooser.js"],"names":["connect","TeamChooser","props","state","players","getTeams","shuffledPlayers","i","length","rand","Math","floor","random","selectedTeams","teamNumber","getShuffledPlayers","forEach","player","index","push","console","log","numberOfTeams","l","map","team","teamIndex","playersIndex","React","Component","mapStateToProps","teams"],"mappings":"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","sourcesContent":["import { connect } from 'react-redux';\n\nclass TeamChooser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            players: []\n        };\n    }\n    componentDidMount() {\n        this.getTeams()\n    }\n    getShuffledPlayers() {\n       const shuffledPlayers =  this.props.players\n        for (var i = shuffledPlayers.length - 1; i > 0; i--) {\n            var rand = Math.floor(Math.random() * (i + 1));\n            [shuffledPlayers[i], shuffledPlayers[rand]] = [shuffledPlayers[rand], shuffledPlayers[i]]\n        }\n        return shuffledPlayers\n    }\n    getTeams() {\n     const selectedTeams = [] ;\n     let teamNumber = 1;\n     this.getShuffledPlayers().forEach((player, index) => {\n        selectedTeams[teamNumber] = Array.isArray(selectedTeams[teamNumber]) ? selectedTeams[teamNumber] : []\n        selectedTeams[teamNumber].push(index)\n        console.log(selectedTeams[teamNumber])\n        if (teamNumber === this.props.numberOfTeams) {\n            teamNumber = 1;\n            return\n        }\n        teamNumber++\n\n    })\n        return selectedTeams;\n    }\n\n    render() {\n        console.l\n        return (\n            <div>\n                {this.getTeams().map( (team, teamIndex) =>\n                    <div key={teamIndex}>\n                        <h5>Team {teamIndex} </h5>\n                        <table className=\"table table-hover\">\n                            <thead>\n                                <tr>\n                                    <th scope=\"col\"> Player Name:</th>\n                                </tr>\n                            </thead>\n                            <tbody>\n                            { team.map(playersIndex =>\n                                <tr className=\"table-active\" key={playersIndex}>\n                                    <td>{this.props.players[playersIndex]}</td>\n                                </tr>\n                            )}\n                            </tbody>\n                        </table>\n                    </div>\n                 )\n                }\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    numberOfTeams: state.teams.numberOfTeams,\n    players: state.player.players\n});\n\nexport default connect(mapStateToProps)(TeamChooser);"]},"metadata":{},"sourceType":"module"}