{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/tarkett/miljandev/soccer-app/components/TeamChooser.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\nimport { removePlayer } from \"../redux/actions/playerActions\";\n\nvar TeamChooser = /*#__PURE__*/function (_React$Component) {\n  _inherits(TeamChooser, _React$Component);\n\n  function TeamChooser(props) {\n    var _this;\n\n    _classCallCheck(this, TeamChooser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TeamChooser).call(this, props));\n    _this.state = {\n      players: []\n    };\n    return _this;\n  }\n\n  _createClass(TeamChooser, [{\n    key: \"getTeams\",\n    value: function getTeams() {\n      var selectedTeams = {};\n      var teamNumber = 1;\n      this.props.players.forEach(function (player, index) {\n        selectedTeams[teamNumber] = [].concat(_toConsumableArray(selectedTeam[teamNumber]), [index]);\n        teamNumber = teamNumber === 1 ? 1 : 0;\n      });\n      console.log(selectedTeams);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"d-flex justify-content-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"list-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, this.props.players.map(function (player, index) {\n        return __jsx(\"a\", {\n          key: index,\n          className: \"list-group-item list-group-item-action player-item\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, player, __jsx(\"button\", {\n          onClick: function onClick() {\n            return _this2.props.removePlayer(index);\n          },\n          type: \"button\",\n          className: \"close\",\n          \"aria-label\": \"Close\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, __jsx(\"span\", {\n          className: \"text-danger\",\n          \"aria-hidden\": \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 36\n          },\n          __self: this\n        }, \"\\xD7\")));\n      }))));\n    }\n  }]);\n\n  return TeamChooser;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    players: state.player.players\n  };\n};\n\nvar mapDispatchToProps = {\n  removePlayer: removePlayer\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamChooser);","map":{"version":3,"sources":["/home/tarkett/miljandev/soccer-app/components/TeamChooser.js"],"names":["connect","removePlayer","TeamChooser","props","state","players","selectedTeams","teamNumber","forEach","player","index","selectedTeam","console","log","map","React","Component","mapStateToProps","mapDispatchToProps"],"mappings":";;;;;;;;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,gCAA7B;;IAEMC,W;;;AACF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAFe;AAKlB;;;;+BAEU;AACV,UAAMC,aAAa,GAAG,EAAtB;AACA,UAAIC,UAAU,GAAG,CAAjB;AACC,WAAKJ,KAAL,CAAWE,OAAX,CAAmBG,OAAnB,CAA2B,UAACC,MAAD,EAASC,KAAT,EAAmB;AAC1CJ,QAAAA,aAAa,CAACC,UAAD,CAAb,gCAAgCI,YAAY,CAACJ,UAAD,CAA5C,IAA0DG,KAA1D;AACAH,QAAAA,UAAU,GAAGA,UAAU,KAAK,CAAf,GAAmB,CAAnB,GAAuB,CAApC;AACH,OAHD;AAIEK,MAAAA,OAAO,CAACC,GAAR,CAAYP,aAAZ;AACH;;;6BAEQ;AAAA;;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,+BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ,KAAKH,KAAL,CAAWE,OAAX,CAAmBS,GAAnB,CAAuB,UAACL,MAAD,EAASC,KAAT;AAAA,eACnB;AAAG,UAAA,GAAG,EAAEA,KAAR;AAAe,UAAA,SAAS,EAAC,oDAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACKD,MADL,EAEI;AACI,UAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACN,KAAL,CAAWF,YAAX,CAAwBS,KAAxB,CAAN;AAAA,WADb;AAEI,UAAA,IAAI,EAAC,QAFT;AAEkB,UAAA,SAAS,EAAC,OAF5B;AAGI,wBAAW,OAHf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAKI;AAAM,UAAA,SAAS,EAAC,aAAhB;AAA8B,yBAAY,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALJ,CAFJ,CADmB;AAAA,OAAvB,CAFR,CADJ,CADJ,CADJ;AAsBH;;;;EAzCqBK,KAAK,CAACC,S;;AA2ChC,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAb,KAAK;AAAA,SAAK;AAC9BC,IAAAA,OAAO,EAAED,KAAK,CAACK,MAAN,CAAaJ;AADQ,GAAL;AAAA,CAA7B;;AAIA,IAAMa,kBAAkB,GAAG;AACvBjB,EAAAA,YAAY,EAAEA;AADS,CAA3B;AAGA,eAAeD,OAAO,CAACiB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6ChB,WAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { removePlayer } from \"../redux/actions/playerActions\";\n\nclass TeamChooser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            players: []\n        };\n    }\n\n    getTeams() {\n     const selectedTeams = {} ;\n     let teamNumber = 1;\n      this.props.players.forEach((player, index) => {\n          selectedTeams[teamNumber] = [...selectedTeam[teamNumber], index]\n          teamNumber = teamNumber === 1 ? 1 : 0\n      })\n        console.log(selectedTeams)\n    }\n\n    render() {\n        return (\n            <div>\n                <div className=\"d-flex justify-content-center\">\n                    <div className=\"list-group\">\n                        {\n                            this.props.players.map((player, index) =>\n                                <a key={index} className=\"list-group-item list-group-item-action player-item\">\n                                    {player}\n                                    <button\n                                        onClick={() => this.props.removePlayer(index)}\n                                        type=\"button\" className=\"close\"\n                                        aria-label=\"Close\"\n                                    >\n                                        <span className=\"text-danger\" aria-hidden=\"true\">&times;</span>\n                                    </button>\n                                </a>\n                            )\n                        }\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    players: state.player.players\n});\n\nconst mapDispatchToProps = {\n    removePlayer: removePlayer,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamChooser);"]},"metadata":{},"sourceType":"module"}