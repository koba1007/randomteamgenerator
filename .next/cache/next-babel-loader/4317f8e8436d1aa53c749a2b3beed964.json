{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from 'react';\nimport Modal from 'react-modal';\nimport TeamChooser from \"./TeamChooser\";\nimport { connect } from 'react-redux';\nimport { updateNumberOfTeams } from \"../redux/actions/teamsActions\";\nconst customStyles = {\n  content: {\n    top: '40%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '100%',\n    zIndex: '2'\n  }\n};\nModal.setAppElement(\"#team-list-modal\");\n\nclass TeamListModal extends React.Component {\n  static getInitialProps({\n    store\n  }) {}\n\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"openModal\", () => {\n      this.setState({\n        isModalOpen: true\n      });\n    });\n\n    _defineProperty(this, \"closeModal\", () => {\n      this.setState({\n        isModalOpen: false\n      });\n    });\n\n    this.state = {\n      isModalOpen: false\n    };\n  }\n\n  afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = '#f00';\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"button\", {\n      type: \"button\",\n      className: \"btn btn-success align-input-left ml-3\",\n      onClick: this.openModal\n    }, \"Get your teams\"), __jsx(\"div\", {\n      id: \"team-list-modal\",\n      className: \"modal\"\n    }, __jsx(Modal, {\n      isOpen: this.state.isModalOpen,\n      onRequestClose: this.closeModal,\n      style: customStyles,\n      contentLabel: \"Get your teams\"\n    }, __jsx(\"div\", {\n      className: \"modal-dialog modal-fullscreen\",\n      role: \"document\"\n    }, __jsx(\"div\", {\n      className: \"modal-content\"\n    }, __jsx(\"div\", {\n      className: \"modal-header\"\n    }, __jsx(\"h5\", {\n      className: \"modal-title\"\n    }, \" Your teams have been selected \"), __jsx(\"button\", {\n      type: \"button\",\n      onClick: this.closeModal,\n      className: \"close\",\n      \"data-dismiss\": \"modal\",\n      \"aria-label\": \"Close\"\n    }, __jsx(\"span\", {\n      \"aria-hidden\": \"true\"\n    }, \"\\xD7\"))), __jsx(\"div\", {\n      className: \"modal-body\"\n    }, __jsx(TeamChooser, null)), __jsx(\"div\", {\n      className: \"modal-footer\"\n    }, __jsx(\"button\", {\n      type: \"button\",\n      className: \"btn btn-secondary\",\n      onClick: this.closeModal,\n      \"data-dismiss\": \"modal\"\n    }, \"Close\")))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  numberOfTeams: state.teams.numberOfTeams\n});\n\nconst mapDispatchToProps = {\n  updateNumberOfTeams: updateNumberOfTeams\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamListModal);","map":null,"metadata":{},"sourceType":"module"}