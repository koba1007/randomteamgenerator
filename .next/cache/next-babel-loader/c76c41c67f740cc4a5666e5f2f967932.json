{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { ADD_PLAYER } from '../actions/playerActions';\nimport { REMOVE_PLAYER } from '../actions/playerActions';\n\nconst playerReducer = (state = {\n  players: []\n}, action) => {\n  switch (action.type) {\n    case ADD_PLAYER:\n      return _objectSpread({}, state, {\n        players: [...state.players, action.payload]\n      });\n\n    case REMOVE_PLAYER:\n      return _objectSpread({}, state, {\n        players: [...state.players.splice(action.payload, 1)]\n      });\n\n    default:\n      return _objectSpread({}, state);\n  }\n};\n\nexport default playerReducer;","map":{"version":3,"sources":["/home/tarkett/miljandev/soccer-app/redux/reducers/playerReducer.js"],"names":["ADD_PLAYER","REMOVE_PLAYER","playerReducer","state","players","action","type","payload","splice"],"mappings":";;;;;;AAAA,SAASA,UAAT,QAA2B,0BAA3B;AACA,SAASC,aAAT,QAA8B,0BAA9B;;AAEA,MAAMC,aAAa,GAAG,CAACC,KAAK,GAAG;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAT,EAAyBC,MAAzB,KAAoC;AACtD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKN,UAAL;AACI,+BAAWG,KAAX;AAAkBC,QAAAA,OAAO,EAAG,CAAE,GAAGD,KAAK,CAACC,OAAX,EAAoBC,MAAM,CAACE,OAA3B;AAA5B;;AACJ,SAAKN,aAAL;AACI,+BAAWE,KAAX;AAAkBC,QAAAA,OAAO,EAAG,CAAC,GAAGD,KAAK,CAACC,OAAN,CAAcI,MAAd,CAAqBH,MAAM,CAACE,OAA5B,EAAqC,CAArC,CAAJ;AAA5B;;AACJ;AACI,+BAAWJ,KAAX;AANR;AAQH,CATD;;AAUA,eAAeD,aAAf","sourcesContent":["import { ADD_PLAYER } from '../actions/playerActions';\nimport { REMOVE_PLAYER } from '../actions/playerActions';\n\nconst playerReducer = (state = { players: []}, action) => {\n    switch (action.type) {\n        case ADD_PLAYER:\n            return {...state, players:  [ ...state.players, action.payload] };\n        case REMOVE_PLAYER:\n            return {...state, players:  [...state.players.splice(action.payload, 1)] };\n        default:\n            return {...state};\n    }\n};\nexport default playerReducer;\n"]},"metadata":{},"sourceType":"module"}