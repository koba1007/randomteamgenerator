{"ast":null,"code":"var _jsxFileName = \"/home/tarkett/miljandev/soccer-app/components/TeamChooser.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\nimport { removePlayer } from \"../redux/actions/playerActions\";\n\nclass TeamChooser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: []\n    };\n  }\n\n  componentDidMount() {\n    this.getTeams();\n  }\n\n  getTeams() {\n    const selectedTeams = [];\n    let teamNumber = 1;\n    console.log(this.props.players);\n    this.props.players.forEach((player, index) => {\n      console.log(index); // selectedTeams[teamNumber] = [...selectedTeams[teamNumber], index]\n      // teamNumber = teamNumber === 1 ? 1 : 0\n    });\n    console.log(selectedTeams);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, \"test team chooser\");\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  players: state.player.players\n});\n\nconst mapDispatchToProps = {\n  removePlayer: removePlayer\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamChooser);","map":{"version":3,"sources":["/home/tarkett/miljandev/soccer-app/components/TeamChooser.js"],"names":["connect","removePlayer","TeamChooser","React","Component","constructor","props","state","players","componentDidMount","getTeams","selectedTeams","teamNumber","console","log","forEach","player","index","render","mapStateToProps","mapDispatchToProps"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,gCAA7B;;AAEA,MAAMC,WAAN,SAA0BC,KAAK,CAACC,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL;AACH;;AACDA,EAAAA,QAAQ,GAAG;AACV,UAAMC,aAAa,GAAG,EAAtB;AACA,QAAIC,UAAU,GAAG,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKR,KAAL,CAAWE,OAAvB;AACC,SAAKF,KAAL,CAAWE,OAAX,CAAmBO,OAAnB,CAA2B,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC1CJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,KAAZ,EAD0C,CAE1C;AACA;AACH,KAJD;AAKEJ,IAAAA,OAAO,CAACC,GAAR,CAAYH,aAAZ;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ;AAKH;;AA5BqC;;AA8B1C,MAAMC,eAAe,GAAGZ,KAAK,KAAK;AAC9BC,EAAAA,OAAO,EAAED,KAAK,CAACS,MAAN,CAAaR;AADQ,CAAL,CAA7B;;AAIA,MAAMY,kBAAkB,GAAG;AACvBnB,EAAAA,YAAY,EAAEA;AADS,CAA3B;AAGA,eAAeD,OAAO,CAACmB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6ClB,WAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { removePlayer } from \"../redux/actions/playerActions\";\n\nclass TeamChooser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            players: []\n        };\n    }\n    componentDidMount() {\n        this.getTeams()\n    }\n    getTeams() {\n     const selectedTeams = [] ;\n     let teamNumber = 1;\n     console.log(this.props.players)\n      this.props.players.forEach((player, index) => {\n          console.log(index)\n          // selectedTeams[teamNumber] = [...selectedTeams[teamNumber], index]\n          // teamNumber = teamNumber === 1 ? 1 : 0\n      })\n        console.log(selectedTeams)\n    }\n\n    render() {\n        return (\n            <div>\n                test team chooser\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    players: state.player.players\n});\n\nconst mapDispatchToProps = {\n    removePlayer: removePlayer,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamChooser);"]},"metadata":{},"sourceType":"module"}