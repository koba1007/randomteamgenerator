{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\nimport { setSelectedTeams } from \"../redux/actions/teamsActions\";\n\nclass TeamChooser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: []\n    };\n  }\n\n  componentDidMount() {\n    this.getTeams();\n  }\n\n  getShuffledPlayers() {\n    const shuffledPlayers = this.props.players;\n\n    for (var i = shuffledPlayers.length - 1; i > 0; i--) {\n      var rand = Math.floor(Math.random() * (i + 1));\n      [shuffledPlayers[i], shuffledPlayers[rand]] = [shuffledPlayers[rand], shuffledPlayers[i]];\n    }\n\n    return shuffledPlayers;\n  }\n\n  getTeams() {\n    const selectedTeams = [];\n    let teamNumber = 1;\n    this.getShuffledPlayers().forEach((player, index) => {\n      selectedTeams[teamNumber] = Array.isArray(selectedTeams[teamNumber]) ? selectedTeams[teamNumber] : [];\n      selectedTeams[teamNumber].push(index);\n\n      if (teamNumber === this.props.numberOfTeams) {\n        teamNumber = 1;\n        return;\n      }\n\n      teamNumber++;\n    });\n    this.props.setSelectedTeams(selectedTeams);\n  }\n\n  render() {\n    return __jsx(\"div\", null, this.props.selectedTeams.map((team, teamIndex) => __jsx(\"div\", {\n      key: teamIndex\n    }, __jsx(\"h5\", null, \"Team \", teamIndex, \" \"), __jsx(\"table\", {\n      className: \"table table-hover\"\n    }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n      scope: \"col\"\n    }, \" Player name:\"))), __jsx(\"tbody\", null, team.map(playersIndex => __jsx(\"tr\", {\n      className: \"table-active\",\n      key: playersIndex\n    }, __jsx(\"td\", null, this.props.players[playersIndex]))))))));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  numberOfTeams: state.teams.numberOfTeams,\n  selectedTeams: state.teams.selectedTeams,\n  players: state.player.players\n});\n\nconst mapDispatchToProps = {\n  setSelectedTeams: setSelectedTeams\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamChooser);","map":null,"metadata":{},"sourceType":"module"}