{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Modal from 'react-modal';\nimport TeamChooser from \"./TeamChooser\";\nimport { connect } from 'react-redux';\nimport { updateNumberOfTeams } from \"../redux/actions/teamsActions\";\nvar customStyles = {\n  content: {\n    top: '50%',\n    left: '50%',\n    right: 'auto',\n    bottom: 'auto',\n    marginRight: '-50%',\n    transform: 'translate(-50%, -50%)',\n    width: '100%',\n    zIndex: '2'\n  }\n};\n\nvar TeamListModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(TeamListModal, _React$Component);\n\n  _createClass(TeamListModal, null, [{\n    key: \"getInitialProps\",\n    value: function getInitialProps(_ref) {\n      var store = _ref.store;\n    }\n  }]);\n\n  function TeamListModal(props) {\n    var _this;\n\n    _classCallCheck(this, TeamListModal);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TeamListModal).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"openModal\", function () {\n      _this.setContentErrors();\n\n      _this.setState({\n        isModalOpen: true\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"closeModal\", function () {\n      _this.setState({\n        isModalOpen: false\n      });\n    });\n\n    _this.state = {\n      isModalOpen: false,\n      contentErrors: []\n    };\n    return _this;\n  }\n\n  _createClass(TeamListModal, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      Modal.setAppElement(\"#team-list-modal\");\n    }\n  }, {\n    key: \"afterOpenModal\",\n    value: function afterOpenModal() {\n      // references are now sync'd and can be accessed.\n      subtitle.style.color = '#f00';\n    }\n  }, {\n    key: \"setContentErrors\",\n    value: function setContentErrors() {\n      var contentErrors = [];\n\n      if (this.props.players.length <= 1) {\n        contentErrors.push(\"You didn't add enough players.\");\n      }\n\n      if (this.props.players.length < this.props.numberOfTeams) {\n        contentErrors.push(\"Number of players must be greater then number of teams.\");\n      }\n\n      console.log(this.props.numberOfTeams);\n\n      if (this.props.numberOfTeams < 2) {\n        contentErrors.push(\"Number of teams can not be less then 2.\");\n      }\n\n      this.setState({\n        contentErrors: contentErrors\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        className: \"text-center label-distance\"\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-success\",\n        onClick: this.openModal\n      }, \"Get your teams\"), __jsx(\"div\", {\n        id: \"team-list-modal\",\n        className: \"modal\"\n      }, __jsx(Modal, {\n        isOpen: this.state.isModalOpen,\n        onRequestClose: this.closeModal,\n        style: customStyles,\n        contentLabel: \"Get your teams\"\n      }, __jsx(\"div\", {\n        className: \"modal-dialog modal-fullscreen\",\n        role: \"document\"\n      }, __jsx(\"div\", {\n        className: \"modal-content d-flex justify-content-center\"\n      }, __jsx(\"div\", {\n        className: \"modal-header\"\n      }, __jsx(\"h5\", {\n        className: \"modal-title \".concat(this.state.contentErrors === 0 ? 'text-danger' : '')\n      }, \" \", this.state.contentErrors.length === 0 ? 'Your teams have been selected' : 'There are validation errors'), __jsx(\"button\", {\n        type: \"button\",\n        onClick: this.closeModal,\n        className: \"close\",\n        \"data-dismiss\": \"modal\",\n        \"aria-label\": \"Close\"\n      }, __jsx(\"span\", {\n        \"aria-hidden\": \"true\"\n      }, \"\\xD7\"))), __jsx(\"div\", {\n        className: \"modal-body\"\n      }, this.state.contentErrors.length === 0 ? __jsx(TeamChooser, null) : __jsx(\"div\", {\n        className: \"alert alert-dismissible alert-warning\"\n      }, __jsx(\"p\", {\n        className: \"mb-0\"\n      }, this.state.contentErrors.map(function (error) {\n        return __jsx(\"span\", null, __jsx(\"span\", null, \" \", error), \" \", __jsx(\"br\", null));\n      })))), __jsx(\"div\", {\n        className: \"modal-footer\"\n      }, __jsx(\"button\", {\n        type: \"button\",\n        className: \"btn btn-secondary\",\n        onClick: this.closeModal,\n        \"data-dismiss\": \"modal\"\n      }, \"Close\")))))));\n    }\n  }]);\n\n  return TeamListModal;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    numberOfTeams: state.teams.numberOfTeams,\n    selectedTeams: state.teams.selectedTeams,\n    players: state.player.players\n  };\n};\n\nvar mapDispatchToProps = {\n  updateNumberOfTeams: updateNumberOfTeams\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamListModal);","map":null,"metadata":{},"sourceType":"module"}