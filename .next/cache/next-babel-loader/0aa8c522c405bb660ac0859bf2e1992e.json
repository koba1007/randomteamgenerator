{"ast":null,"code":"import _Array$isArray from \"@babel/runtime-corejs2/core-js/array/is-array\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\n\nvar TeamChooser = /*#__PURE__*/function (_React$Component) {\n  _inherits(TeamChooser, _React$Component);\n\n  function TeamChooser(props) {\n    var _this;\n\n    _classCallCheck(this, TeamChooser);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TeamChooser).call(this, props));\n    _this.state = {\n      players: []\n    };\n    return _this;\n  }\n\n  _createClass(TeamChooser, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getTeams();\n    }\n  }, {\n    key: \"getShuffledPlayers\",\n    value: function getShuffledPlayers() {\n      var shuffledPlayers = this.props.players;\n\n      for (var i = shuffledPlayers.length - 1; i > 0; i--) {\n        var rand = Math.floor(Math.random() * (i + 1));\n        var _ref = [shuffledPlayers[rand], shuffledPlayers[i]];\n        shuffledPlayers[i] = _ref[0];\n        shuffledPlayers[rand] = _ref[1];\n      }\n\n      return shuffledPlayers;\n    }\n  }, {\n    key: \"getTeams\",\n    value: function getTeams() {\n      var _this2 = this;\n\n      var selectedTeams = [];\n      var teamNumber = 1;\n      console.log(this.props.numberOfTeams);\n      this.getShuffledPlayers().forEach(function (player, index) {\n        selectedTeams[teamNumber] = _Array$isArray(selectedTeams[teamNumber]) ? selectedTeams[teamNumber] : [];\n        selectedTeams[teamNumber].push(index);\n        console.log(selectedTeams[teamNumber]);\n\n        if (teamNumber === _this2.props.numberOfTeams) {\n          teamNumber = 1;\n          return;\n        }\n\n        teamNumber++;\n      });\n      return selectedTeams;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", null, this.getTeams().map(function (team, teamIndex) {\n        return __jsx(\"div\", {\n          key: teamIndex\n        }, __jsx(\"h5\", null, \"Team \", teamIndex, \" \"), __jsx(\"table\", {\n          className: \"table table-hover\"\n        }, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", {\n          scope: \"col\"\n        }, \" Player name:\"))), __jsx(\"tbody\", null, team.map(function (playersIndex) {\n          return __jsx(\"tr\", {\n            className: \"table-active\",\n            key: playersIndex\n          }, __jsx(\"td\", null, _this3.props.players[playersIndex]));\n        }))));\n      }));\n    }\n  }]);\n\n  return TeamChooser;\n}(React.Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    numberOfTeams: state.teams.numberOfTeams,\n    players: state.player.players\n  };\n};\n\nexport default connect(mapStateToProps)(TeamChooser);","map":null,"metadata":{},"sourceType":"module"}