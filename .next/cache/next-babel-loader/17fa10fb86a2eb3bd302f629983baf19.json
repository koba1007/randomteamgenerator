{"ast":null,"code":"var _jsxFileName = \"/home/tarkett/miljandev/soccer-app/components/TeamChooser.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { connect } from 'react-redux';\nimport { removePlayer } from \"../redux/actions/playerActions\";\n\nclass TeamChooser extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      players: []\n    };\n  }\n\n  componentDidMount() {\n    this.getTeams();\n  }\n\n  getTeams() {\n    const selectedTeams = [];\n    const numberOfTeams = 2;\n    let teamNumber = 1;\n    console.log(this.props.players);\n    this.props.players.forEach((player, index) => {\n      console.log(selectedTeams[1]);\n      console.log('team no' + teamNumber);\n      selectedTeams[teamNumber] = Array.isArray(selectedTeams[teamNumber]) ? selectedTeams[teamNumber] : [];\n      selectedTeams[teamNumber].push(index);\n      console.log(selectedTeams[teamNumber]);\n\n      if (teamNumber === numberOfTeams) {\n        teamNumber = 1;\n        return;\n      }\n\n      teamNumber++;\n    });\n    console.log(selectedTeams);\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, \"test team chooser\");\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  players: state.player.players\n});\n\nconst mapDispatchToProps = {\n  removePlayer: removePlayer\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamChooser);","map":{"version":3,"sources":["/home/tarkett/miljandev/soccer-app/components/TeamChooser.js"],"names":["connect","removePlayer","TeamChooser","React","Component","constructor","props","state","players","componentDidMount","getTeams","selectedTeams","numberOfTeams","teamNumber","console","log","forEach","player","index","Array","isArray","push","render","mapStateToProps","mapDispatchToProps"],"mappings":";;;AAAA,SAASA,OAAT,QAAwB,aAAxB;AACA,SAASC,YAAT,QAA6B,gCAA7B;;AAEA,MAAMC,WAAN,SAA0BC,KAAK,CAACC,SAAhC,CAA0C;AACtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE;AADA,KAAb;AAGH;;AACDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKC,QAAL;AACH;;AACDA,EAAAA,QAAQ,GAAG;AACV,UAAMC,aAAa,GAAG,EAAtB;AACA,UAAMC,aAAa,GAAG,CAAtB;AACA,QAAIC,UAAU,GAAG,CAAjB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAL,CAAWE,OAAvB;AACG,SAAKF,KAAL,CAAWE,OAAX,CAAmBQ,OAAnB,CAA2B,CAACC,MAAD,EAASC,KAAT,KAAmB;AAC1CJ,MAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAa,CAAC,CAAD,CAAzB;AACAG,MAAAA,OAAO,CAACC,GAAR,CAAY,YAAUF,UAAtB;AACAF,MAAAA,aAAa,CAACE,UAAD,CAAb,GAA4BM,KAAK,CAACC,OAAN,CAAcT,aAAa,CAACE,UAAD,CAA3B,IAA2CF,aAAa,CAACE,UAAD,CAAxD,GAAuE,EAAnG;AACAF,MAAAA,aAAa,CAACE,UAAD,CAAb,CAA0BQ,IAA1B,CAA+BH,KAA/B;AACAJ,MAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAa,CAACE,UAAD,CAAzB;;AACA,UAAIA,UAAU,KAAKD,aAAnB,EAAkC;AAC9BC,QAAAA,UAAU,GAAG,CAAb;AACA;AACH;;AACDA,MAAAA,UAAU;AAEb,KAZD;AAaAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,aAAZ;AACH;;AAEDW,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADJ;AAKH;;AArCqC;;AAuC1C,MAAMC,eAAe,GAAGhB,KAAK,KAAK;AAC9BC,EAAAA,OAAO,EAAED,KAAK,CAACU,MAAN,CAAaT;AADQ,CAAL,CAA7B;;AAIA,MAAMgB,kBAAkB,GAAG;AACvBvB,EAAAA,YAAY,EAAEA;AADS,CAA3B;AAGA,eAAeD,OAAO,CAACuB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CtB,WAA7C,CAAf","sourcesContent":["import { connect } from 'react-redux';\nimport { removePlayer } from \"../redux/actions/playerActions\";\n\nclass TeamChooser extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            players: []\n        };\n    }\n    componentDidMount() {\n        this.getTeams()\n    }\n    getTeams() {\n     const selectedTeams = [] ;\n     const numberOfTeams = 2;\n     let teamNumber = 1;\n     console.log(this.props.players)\n        this.props.players.forEach((player, index) => {\n            console.log(selectedTeams[1])\n            console.log('team no'+teamNumber)\n            selectedTeams[teamNumber] = Array.isArray(selectedTeams[teamNumber]) ? selectedTeams[teamNumber] : []\n            selectedTeams[teamNumber].push(index)\n            console.log(selectedTeams[teamNumber])\n            if (teamNumber === numberOfTeams) {\n                teamNumber = 1;\n                return\n            }\n            teamNumber++\n\n        })\n        console.log(selectedTeams)\n    }\n\n    render() {\n        return (\n            <div>\n                test team chooser\n            </div>\n        )\n    }\n}\nconst mapStateToProps = state => ({\n    players: state.player.players\n});\n\nconst mapDispatchToProps = {\n    removePlayer: removePlayer,\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TeamChooser);"]},"metadata":{},"sourceType":"module"}