{"ast":null,"code":"var __jsx = React.createElement;\nimport App from 'next/app';\nimport React from 'react';\nimport withRedux from \"next-redux-wrapper\";\nimport store from '../redux/store';\nimport { Provider } from 'react-redux';\nimport \"../public/static/css/app.css\";\n\nclass MyApp extends App {\n  static async getInitialProps({\n    Component,\n    ctx\n  }) {\n    const pageProps = Component.getInitialProps ? await Component.getInitialProps(ctx) : {}; //Anything returned here can be accessed by the client\n\n    return {\n      pageProps: pageProps\n    };\n  }\n\n  render() {\n    //pageProps that were returned  from 'getInitialProps' are stored in the props i.e. pageprops\n    const {\n      Component,\n      pageProps,\n      store\n    } = this.props;\n    return __jsx(Provider, {\n      store: store\n    }, __jsx(Component, pageProps));\n  }\n\n} //makeStore function that returns a new store for every request\n\n\nconst makeStore = () => store; //withRedux wrapper that passes the store to the App Component\n\n\nexport default withRedux(makeStore)(MyApp);","map":null,"metadata":{},"sourceType":"module"}